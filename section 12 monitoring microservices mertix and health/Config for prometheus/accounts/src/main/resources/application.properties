#This files we need to configure in account's application.properties

spring.application.name=accounts
spring.profiles.active=dev

server.port=9999

#optional is used-->if there is any problem in config server the accounts service will still start without config
spring.config.import=optional:configserver:http://localhost:8080


#TO expose all the endpoint urls so that i can invoke them
#because by default actuator don't expose the endpoint "/refresh"
management.endpoints.web.exposure.include=*


#properties which will tell to connect to my eureka server
#This property is for --> ip-address as preference for register yourself
eureka.instance.prefer-ip-address=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:8070/eureka/


#####Configuring info endpoint
management.info.env.enabled=true
info.app.name=Accounts Microservice
info.app.descripction=Test bank account application backend
info.app.version=1.0.0


###### Creating a endpoint to shut-down my service in a graceful manner
#endpoints.shutdown.enabled=true
management.endpoint.shutdown.enabled=true



#######################################################################################################################
#Properties for resilience4j


#Properties for circuit-breaker
#to register all the info in actuator
#resilience4j.circuitbreaker.configs.default.register-health-indicator=true
#Same name as given in api for circuit-breaker --> "detailsForCustomerSupportApp"
#resilience4j.circuitbreaker.instances.detailsForCustomerSupportApp.minimum-number-of-calls=5
#resilience4j.circuitbreaker.instances.detailsForCustomerSupportApp.failure-rate-threshold=50
#resilience4j.circuitbreaker.instances.detailsForCustomerSupportApp.wait-duration-in-open-state=30000
#resilience4j.circuitbreaker.instances.detailsForCustomerSupportApp.permitted-number-of-calls-in-half-open-state=2
#
#
##Properties for Retry pattern
##resilience4j.retry.configs.default.registerHealthIndicator=true
#resilience4j.retry.instances.retryForCustomerDetails.max-attempts=3
#resilience4j.retry.instances.retryForCustomerDetails.wait-duration=2000



#Property related to rate limiter
resilience4j.ratelimiter.configs.default.register-health-indicator=true
#For how much time my thread has to wait
resilience4j.ratelimiter.instances.sayHello.timeout-duration=5000
resilience4j.ratelimiter.instances.sayHello.limit-refresh-period=5000
#Api will accept only 1 request in a particular time "5000" mls
resilience4j.ratelimiter.instances.sayHello.limit-for-period=1




# Micrometer related properties
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.metrics.distribution.percentiles-histogram.http.server.requests=true
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

#spring.zipkin.base-url=http://localhost:9411